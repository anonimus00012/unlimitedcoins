{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","props","deposit","bind","Utils","window","loc","document","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","getElementById","value","amount","sponsor","tarifa","send","shouldPollResponse","callValue","className","type","id","placeholder","class","onClick","Component","state","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","call","esto","setState","parseInt","Investors","_hex","Invested","RefRewards","data-toggle","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","trx","getAccount","mydireccion","address","fromHex","investors","MYwithdrawable","My","style","text","data-wow-duration","color","data-wow-delay","TronLinkInfo","accountAddress","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","getBalance","balanceInSun","balanceInTRX","fromSun","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.dbc5e318.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","\r\n/// La direccion de su contrato acÃ¡ ///////////////////////////////////\r\nconst contractAddress = \"TQ32urz4ZWjq9RMQPabsbb1Lha4bPhLr7a\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport \"./CrowdFunding.scss\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deposit = this.deposit.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n  };\n\n\n  async deposit() {\n\n    var loc = document.location.href;\n    if(loc.indexOf('?')>0){\n        var getString = loc.split('?')[1];\n        var GET = getString.split('&');\n        var get = {};\n        for(var i = 0, l = GET.length; i < l; i++){\n            var tmp = GET[i].split('=');\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\n        }\n        if (get['capital']) {\n          document.getElementById('tarifa').value = 1;\n          document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n        }else{\n          if (get['ref'].length === 34) {\n            document.getElementById('tarifa').value = 0;\n            document.getElementById('sponsor').value = get['ref'];            \n          }else{\n            document.getElementById('tarifa').value = 0;\n             document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n          }\n        }\n        \n    }else{\n        document.getElementById('tarifa').value = 0;\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \n    }\n\n    let amount = document.getElementById(\"amount\").value;\n    let sponsor = document.getElementById(\"sponsor\").value;\n    let tarifa = document.getElementById(\"tarifa\").value;\n\n    document.getElementById(\"amount\").value = \"\";\n  \n    return Utils.contract.deposit(tarifa, sponsor).send({\n      shouldPollResponse: true,\n      callValue: amount * 1000000 // converted to SUN\n    });\n    \n  };\n\n  render() {\n    \n    return (\n      \n      <div className=\"card wow bounceInUp\">\n          <i className=\"fa fa-diamond\"></i>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Gold Premium</h5>\n          <h6 className=\"card-text\">\n            Return: <strong>200%</strong><br></br>\n            <strong>2%</strong> per day<br></br>\n          </h6>\n            <form>\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 200 TRX\"></input>\n                <p className=\"card-text\">Debes tener ~3 TRX para hacer la transacciÃ³n</p>\n              </div>\n            </form>\n          <button type=\"button\" class=\"btn btn-light\" onClick={() => this.deposit()}>Invertir</button>\n          \n        </div>\n      </div>\n        \n\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalInvestors: 0,\n      totalInvested: 0,\n      totalRefRewards: 0\n    };\n\n    this.totalInvestors = this.totalInvestors.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.totalInvestors(),1000);\n  };\n\n  async totalInvestors() {\n\n    let esto = await Utils.contract.setstate().call();\n    //console.log(esto);\n    this.setState({\n      totalInvestors: parseInt(esto.Investors._hex),\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\n\n    });\n\n  };\n\n  render() {\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\n\n    return (\n      <div className=\"row counters\">\n            \n        <div className=\"col-lg-4 col-12 text-center\">\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\n          <p>Inversores Globales</p>\n        </div>\n\n        <div className=\"col-lg-4 col-12 text-center\">\n          <span data-toggle=\"counter-up\">{totalInvested} TRX</span>\n          <p>Invertido Global</p>\n        </div>\n\n        <div className=\"col-lg-4 col-12 text-center\">\n          <span data-toggle=\"counter-up\">{totalRefRewards} TRX</span>\n          <p>Recompensas  Globales Referidos</p>\n        </div>\n\n      </div>\n\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      direccion: \"\",\n      link: \"Haz una inversiÃ³n para obtener el LINK de referido\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      withdrawn: 0\n\n    };\n\n    this.Investors = this.Investors.bind(this);\n    this.Link = this.Link.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.Investors(),1000);\n    setInterval(() => this.Link(),1000);\n  };\n\n  async Link() {\n    const {registered} = this.state;\n    if(registered){\n\n      let loc = document.location.href;\n      if(loc.indexOf('?')>0){\n        loc = loc.split('?')[0]\n      }\n      let mydireccion = await window.tronWeb.trx.getAccount();\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\n      mydireccion = loc+'?ref='+mydireccion;\n      this.setState({\n        link: mydireccion,\n      });\n    }else{\n      this.setState({\n        link: \"Haz una inversiÃ³n para obtener el LINK de referido\",\n      });\n    }\n  }\n    \n\n  async Investors() {\n\n    let direccion = await window.tronWeb.trx.getAccount();\n    let esto = await Utils.contract.investors(direccion.address).call();\n    let My = await Utils.contract.MYwithdrawable().call();\n    //console.log(esto);\n    //console.log(My);\n    this.setState({\n      direccion: window.tronWeb.address.fromHex(direccion.address),\n      registered: esto.registered,\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\n      invested: parseInt(esto.invested._hex)/1000000,\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\n      my: parseInt(My.amount._hex)/1000000,\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\n    });\n\n  };\n\n  async withdraw(){\n    await Utils.contract.withdraw().send()\n  };\n\n\n  render() {\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\n\n    return (\n      \n      <div className=\"container\">\n\n        <header className=\"section-header\">\n          <h3>My Office: {direccion}</h3><br></br>\n          <h6 style={{'text-align': 'center'}}><a href={link}>{link}</a>&nbsp;\n          <CopyToClipboard text={link}>\n            <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\n          </CopyToClipboard>\n          </h6><br></br>\n          \n        </header>\n\n        <div className=\"row\">\n\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\n            <div className=\"box\">\n              <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{color: '#ff689b'}}></i></div>\n              <h4 className=\"title\"><a href=\"#services\">{invested} TRX</a></h4>\n              <p className=\"description\">Total invertido</p>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\n            <div className=\"box\">\n              <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{color: '#e9bf06'}}></i></div>\n              <h4 className=\"title\"><a href=\"#services\">{totalRef} TRX</a></h4>\n              <p className=\"description\">Total ganancias por referidos</p>\n            </div>\n          </div>\n\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\n            <div className=\"box\">\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\n              <p className=\"description\">Mi balance</p>\n              <h4 className=\"title\"><a href=\"#services\">{my} TRX</a></h4>\n              \n            </div>\n          </div>\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\n            <div className=\"box\">\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\n              <p className=\"description\">Balance por referidos</p>\n              <h4 className=\"title\"><a href=\"#services\"> {balanceRef} TRX</a></h4>\n              \n            </div>\n          </div>\n\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\n            <div className=\"box\">\n              <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{color:'#41cf2e'}}></i></div>\n              <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\n              <p className=\"description\">{balanceRef+my} TRX <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Retirar</button></p>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\n            <div className=\"box\">\n              <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{color: '#4680ff'}}></i></div>\n              <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\n              <p className=\"description\">{withdrawn} TRX</p>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    \n\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./TronLinkInfo.scss\";\n\nexport default class TronLinkInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountAddress: \"Billetera NO conectada\",\n      accountBalance: \"Billetera NO conectada\",\n      accountBandwidth: \"Billetera NO conectada\"\n    };\n  }\n\n  // Uncomment each call one at a time to see your account information filled out\n  componentDidMount() {\n    setInterval(() => this.fetchAccountAddress(),1000);\n    setInterval(() => this.fetchAccountBalance(),1000);\n    setInterval(() => this.fetchAccountBandwidth(),1000);\n  }\n\n  // // The function below will return an object with address, balance, create_time,\n  // // account_resource;\n  async fetchAccountAddress() {\n    const account = await window.tronWeb.trx.getAccount();\n    const accountAddress = account.address; // HexString(Ascii)\n     const accountAddressInBase58 = window.tronWeb.address.fromHex(\n       accountAddress\n     ); // Base58\n\n    this.setState({\n      accountAddress: accountAddressInBase58\n    });\n  }\n  //\n  // // The function below will return the account balance in SUN as a number\n  async fetchAccountBalance() {\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\n\n    this.setState({\n      //accountBalance: balanceInSun // Muestra el balance en SUN\n      accountBalance: balanceInTRX\n    });\n  }\n  //\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\n  async fetchAccountBandwidth() {\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\n\n    this.setState({\n      accountBandwidth: accountBandwidth\n    });\n  }\n\n\n  render() {\n    const { accountAddress, accountBalance, accountBandwidth,} = this.state;\n    return (\n      <div className=\"col-lg-5 mb-5\">\n        <div className=\"card wow bounceInUp\">\n            <i className=\"fa fa-address-card-o\"></i>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">InformaciÃ³n de la cuenta</h5>\n            <h6 className=\"card-text\">\n              DirecciÃ³n:<br></br>\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\n              Balance:<br></br>\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\n              Bandwidth:<br></br>\n               <strong><span>{accountBandwidth}</span></strong><br></br>\n              \n            </h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo col-xs-12 col-md-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='tronLink row' onClick={ openTronLink }>\n                <div className='info col-xs-12 col-md-8'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover' onClick={ openTronLink }>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n    );\n};\n\nexport default TronLinkGuide;","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport Datos from \"../Datos\";\nimport Oficina from \"../Oficina\";\nimport TronLinkInfo from \"../TronLinkInfo\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport \"./App.scss\";\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed) return <TronLinkGuide />;\n\n    if (!this.state.tronWeb.loggedIn) return <TronLinkGuide installed />;\n\n    return (\n      <div>\n        <div>\n          <section id=\"why-us\" className=\"wow fadeIn\">\n            <div className=\"container\">\n              <header className=\"section-header\">\n                  <h3>Has tu inversiÃ³n</h3>\n              </header>\n              <div  className=\"row row-eq-height justify-content-center\">\n                <CrowdFunding />\n                <TronLinkInfo />\n              </div>\n              <div >\n                <Datos />\n              </div>\n            </div>\n          </section>\n          \n          <section id=\"services\" className=\"section-bg\">\n            <Oficina /> \n          </section>\n        </div>\n      </div>\n      \n\n\n      );\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}